{
   "swagger": "2.0",
   "info": {
      "version": "v1",
      "title": "Openforce API",
      "description": "# Introduction\nThe Openforce Contractor API provides IC profile information for data syncs with the contracting company, partner and vendor systems.\n\nFor contracting companies, this can create an ideal solution to sync the latest IC data into dispatch or CRM systems to help reduce risk on overrides. When pulling directly from the data source, contracting companies have peace of mind knowing that theyâ€™re working with the most up-to-date information from the Openforce platform.\n\nBenefits are hardly limited to contracting companies. Instant access and sharing of IC profile information for insurance partners, background screening providers and member benefits partners, adds tremendous benefits such as enhanced user experience and helps remove friction throughout the entire IC management lifecycle.\n\n# Authentication\nThe Openforce API uses an OAuth2 authentication scheme. The Client Credentials Grant is the only supported oAuth2 Flow. Requests to the API must be authenticated using a bearer token in the Authorization header.\n\nApplications will obtain bearer tokens via the token endpoint: https://oforce.auth.us-west-2.amazoncognito.com/oauth2/token\n\nWhen making a request to the token endpoint, the basic auth credentials must be a base64 encoded string in the format client_id:client_secret. These credentials can be obtained through Openforce.\n\nExample request:  ```\n  POST https://oforce.auth.us-west-2.amazoncognito.com/oauth2/token\n    Content-Type='application/x-www-form-urlencoded'&\n    Authorization=Basic [base64 encoded credentials]\n    grant_type=client_credentials&\n    scope=https://api.oforce.com/api\n  ```\n\n\nExample of a successful authentication response:  ```\n  HTTP/1.1 200 OK\n    Content-Type: application/json\n    {\n     \"access_token\": \"eyJz9sdfsdfsdfsd\",\n     \"token_type\": \"Bearer\",\n     \"expires_in\": 3600\n    }\n  ```\n\n\nAdditional information can be found [here](https://docs.aws.amazon.com/cognito/latest/developerguide/token-endpoint.html).\n"
   },
   "paths": {
      "/contractor-guids": {
         "get": {
            "tags": [
               "ContractorGuids"
            ],
            "summary": "Request a Contractor Id",
            "operationId": "Contractor-guidsGet",
            "consumes": [],
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "LastName",
                  "in": "query",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "DateOfBirth",
                  "in": "query",
                  "required": true,
                  "type": "string",
                  "format": "date-time"
               },
               {
                  "name": "GovernmentId",
                  "in": "query",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "CountryCode",
                  "in": "query",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Returns the requested Contractor",
                  "schema": {
                     "type": "string"
                  }
               },
               "400": {
                  "description": "The parameter(s) provided are invalid"
               },
               "404": {
                  "description": "The requested data is not found"
               },
               "500": {
                  "description": "Server Error"
               }
            }
         }
      },
      "/contractors": {
         "get": {
            "tags": [
               "Contractors"
            ],
            "summary": "Request a list of Contractors",
            "operationId": "ContractorsGet",
            "consumes": [],
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "top",
                  "in": "query",
                  "required": false,
                  "type": "integer",
                  "format": "int32"
               },
               {
                  "name": "skip",
                  "in": "query",
                  "required": false,
                  "type": "integer",
                  "format": "int32"
               }
            ],
            "responses": {
               "200": {
                  "description": "Returns the requested Contractors",
                  "schema": {
                     "$ref": "#/definitions/ContractorOutDto"
                  }
               },
               "400": {
                  "description": "The query is malformed",
                  "schema": {
                     "type": "object",
                     "additionalProperties": {
                        "type": "string"
                     }
                  }
               },
               "500": {
                  "description": "Server Error"
               }
            }
         }
      },
      "/contractors/{id}": {
         "get": {
            "tags": [
               "Contractors"
            ],
            "summary": "Request a specific Contractor",
            "operationId": "ContractorsByIdGet",
            "consumes": [],
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "type": "integer",
                  "format": "int32"
               }
            ],
            "responses": {
               "200": {
                  "description": "Returns the requested Contractor",
                  "schema": {
                     "$ref": "#/definitions/ContractorOutDto"
                  }
               },
               "400": {
                  "description": "The parameter(s) provided are invalid"
               },
               "404": {
                  "description": "The requested data is not found"
               },
               "500": {
                  "description": "Server Error"
               }
            }
         }
      },
      "/contractors/{id}/disbursements": {
         "get": {
            "tags": [
               "Disbursements"
            ],
            "summary": "Request a list of Disbursements for a Contractor",
            "operationId": "ContractorsByIdDisbursementsGet",
            "consumes": [],
            "produces": [
               "application/json"
            ],
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "required": true,
                  "type": "string",
                  "format": "uuid"
               }
            ],
            "responses": {
               "200": {
                  "description": "Returns the requested Disbursements",
                  "schema": {
                     "$ref": "#/definitions/DisbursementOutDto"
                  }
               },
               "400": {
                  "description": "The request is malformed",
                  "schema": {
                     "type": "object",
                     "additionalProperties": {
                        "type": "string"
                     }
                  }
               },
               "500": {
                  "description": "An internal server error was encountered"
               }
            }
         }
      }
   },
   "definitions": {
      "ContractorOutDto": {
         "required": [
            "company_name",
            "first_name",
            "last_name",
            "middle_name",
            "email",
            "date_of_birth",
            "contracted_on",
            "address1",
            "city",
            "state",
            "country",
            "postal_code"
         ],
         "type": "object",
         "properties": {
            "id": {
               "format": "int32",
               "type": "integer"
            },
            "external_id": {
               "type": "string"
            },
            "of_id": {
               "format": "int32",
               "type": "integer"
            },
            "company_name": {
               "type": "string"
            },
            "first_name": {
               "type": "string"
            },
            "last_name": {
               "type": "string"
            },
            "middle_name": {
               "type": "string"
            },
            "email": {
               "type": "string"
            },
            "date_of_birth": {
               "format": "date-time",
               "type": "string"
            },
            "contracted_on": {
               "format": "date-time",
               "type": "string"
            },
            "address1": {
               "type": "string"
            },
            "address2": {
               "type": "string"
            },
            "city": {
               "type": "string"
            },
            "state": {
               "type": "string"
            },
            "country": {
               "type": "string"
            },
            "postal_code": {
               "type": "string"
            }
         }
      },
      "DisbursementOutDto": {
         "type": "object",
         "properties": {
            "id": {
               "format": "int32",
               "type": "integer"
            },
            "disbursed_on": {
               "format": "date-time",
               "type": "string"
            },
            "gross_amount": {
               "format": "double",
               "type": "number"
            },
            "net_amount": {
               "format": "double",
               "type": "number"
            },
            "contractor_id": {
               "format": "uuid",
               "type": "string"
            },
            "contracting_company_id": {
               "format": "int32",
               "type": "integer"
            },
            "of_id": {
               "format": "int32",
               "type": "integer"
            }
         }
      }
   }
}
